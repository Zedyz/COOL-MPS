package COOL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptAttribute = new ConceptDescriptorBuilder("COOL.structure.Attribute", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b2537L)).super_("COOL.structure.BaseAttribute").super_(MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b5d49L)).parents("COOL.structure.BaseAttribute", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b5d49L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(2792787857731430661L, "expression", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b2540L), true, false, false)).children(new String[]{"expression"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptBaseAttribute = new ConceptDescriptorBuilder("COOL.structure.BaseAttribute", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b5d49L)).super_("COOL.structure.IFeature").super_(MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b1ae1L)).parents("COOL.structure.IFeature", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b1ae1L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(2792787857731444044L, "className", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b0008L), false)).references("className").create();
  /*package*/ final ConceptDescriptor myConceptClass = new ConceptDescriptorBuilder("COOL.structure.Class", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b0008L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(2792787857731569979L, "inherits", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b0008L), true)).references("inherits").childDescriptors(new ConceptDescriptorBuilder.Link(2792787857731585008L, "features", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b1ae1L), true, true, false)).children(new String[]{"features"}, new boolean[]{true}).alias("Class", "").create();
  /*package*/ final ConceptDescriptor myConceptExpression = new ConceptDescriptorBuilder("COOL.structure.Expression", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b2540L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(2792787857731446387L, "value")).properties("value").create();
  /*package*/ final ConceptDescriptor myConceptIFeature = new ConceptDescriptorBuilder("COOL.structure.IFeature", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b1ae1L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).alias("feature", "").create();
  /*package*/ final ConceptDescriptor myConceptMethod = new ConceptDescriptorBuilder("COOL.structure.Method", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b5cb7L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(2792787857731444055L, "type", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b0008L), false)).references("type").childDescriptors(new ConceptDescriptorBuilder.Link(2792787857731443909L, "parameters", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b5d49L), true, true, false), new ConceptDescriptorBuilder.Link(2792787857731444058L, "expression", MetaIdFactory.conceptId(0x6cf0b4330d5545f1L, 0xb0078ebde24faaedL, 0x26c1f9c2811b2540L), false, false, false)).children(new String[]{"parameters", "expression"}, new boolean[]{true, false}).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAttribute, myConceptBaseAttribute, myConceptClass, myConceptExpression, myConceptIFeature, myConceptMethod);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0k, conceptFqName)) {
      case 0:
        return myConceptAttribute;
      case 1:
        return myConceptBaseAttribute;
      case 2:
        return myConceptClass;
      case 3:
        return myConceptExpression;
      case 4:
        return myConceptIFeature;
      case 5:
        return myConceptMethod;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0k = new String[]{"COOL.structure.Attribute", "COOL.structure.BaseAttribute", "COOL.structure.Class", "COOL.structure.Expression", "COOL.structure.IFeature", "COOL.structure.Method"};
}
